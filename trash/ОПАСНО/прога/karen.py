#  Заданы координаты вершин треугольника. Нужно:
#  1. Определить, существует ли треугольник
#  2. Найти длины его сторон
#  3. Найти длину биссектрисы, проведенную из большего угла
#  4. Определить, является ли треугольник прямоугольным
#  5. Определить, где находится произвольная точка, координаты которой введены
#  с клавиатуры
#  6. Найти расстояние от этой точки до ближайшей стороны

#  Переменные:
#  x1,y1,x2,y2,x3,y3 - координаты заданных вершин треугольника
#  x0,y0 - координаты произвольной точки
#  AB,BC,CA - длины сторон
#  a,b,c - длины сторон в квадрате
#  max - наибольшая сторона треугольника
#  l - длина биссектрисы, проведенного из большего угла
#  S - площадь заданного треугольника
#  p - полупериметр заданного треугольника
#  S1,S2,S3 - площади трех новых треугольников, образованных при соединении
#  вершин с произвольной точкой
#  h1,h2,h3 - высоты в трех новых треугольников, образованных при соединении
#  вершин с произвольной точкой
#  r1,r2,r3 - вычисления через уравнения прямых
#  k1,k2,k3 - отрезки, соединяющие произвольную точку и вершины

#  Тестовые примеры:
#  1. Входные данные: 0 0; 0 3; 3 3; 1 1
#  Вывод:Такой треугольник существует
#  Длины сторон: 3.0 3.0 4.24264
#  Длина биссектрисы, проведенной из большего угла:  2.12132
#  Треугольник прямоугольный
#  Точка не лежит внутри треугольника

#  2. Входные данные: 3 3; 3 3; 3 3
#  Вывод: Такого треугольника не существует

#  3. Входные данные: 0 0; 6 0; 3 2; 3 1.5
#  Вывод:Такой треугольник существует
#  Длины сторон: 6.0 3.605551275463989 3.605551275463989
#  Длина биссектрисы, проведенной из большего угла:  14.422205101855955
#  Треугольник непрямоугольный
#  Точка лежит внутри треугольника или лежит на его стороне
#  Расстояние от заданной точки до ближайшей стороны треугольника равно  0.41602514716892186

from math import sqrt
x1, y1 = map(float, input('Введите координаты первой точки: ').split())
x2, y2 = map(float, input('Введите координаты второй точки: ').split())
x3, y3 = map(float, input('Введите координаты третьей точки: ').split())

#  Находим длины сторон, а также полупериметр и площадь треугольника
AB = sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
BC = sqrt((x3 - x2) ** 2 + (y3 - y2) ** 2)
CA = sqrt((x1 - x3) ** 2 + (y1 - y3) ** 2)
a = (x2 - x1) ** 2 + (y2 - y1) ** 2
b = (x3 - x2) ** 2 + (y3 - y2) ** 2
c = (x1 - x3) ** 2 + (y1 - y3) ** 2
p = (AB + BC + CA) / 2
S = sqrt(p * (p - AB) * (p - BC) * (p - CA))

#  Проверим существование треугольника:
if (AB + BC > CA) and (BC + CA > AB) and (AB + CA > BC):
    print('Такой треугольник существует')
    print('Длины сторон:', round(AB,5),round(BC,5),round(CA,5))
else:
    print('Такого треугольника не существует')
    exit()

#  Найдем биссектрису, проведенную из большего угла.
#  (Напротив большей стороны находится больший угол):
max = AB
l = (2 * sqrt(CA * BC * p * (p-AB))) / (CA + BC)
if BC > max:
    max = BC
    l = (2 * sqrt(CA * AB * p * (p - BC))) / (CA + AB)
if CA > max:
    max = CA
    l = (2 * sqrt(AB * BC * p * (p - CA))) / (AB + BC)
print('Длина биссектрисы, проведенной из большего угла: ', round(l,5))

#  Проверим, прямоугольный треугольник или нет:
if a == b + c:
    print('Треугольник прямоугольный')
elif b == a + c:
    print('Треугольник прямоугольный')
elif c == a + b:
    print('Треугольник прямоугольный')
else:
    print('Треугольник непрямоугольный')

#  Определим нахождение точки относительно треугольника
x0, y0 = map(float, input('Введите координаты точки для проверки').split())

#  Найдем стороны 3-х треугольников,образованных
#  при соединении вершин треугольника ABC с произвольной точкой
k1 = sqrt((x1-x0)**2 + (y1-y0)**2)
k2 = sqrt((x2-x0)**2 + (y2-y0)**2)
k3 = sqrt((x3-x0)**2 + (y3-y0)**2)

#  Найдем площади 3-х треугольников,образованных
#  при соединении вершин треугольника ABC с произвольной точкой
p1 = (AB+k1+k2)/2
S1 = sqrt(p1 * (p1-AB) * (p1-k1) * (p1-k2))
p2 = (BC+k2+k3)/2
S2 = sqrt(p2 * (p2-BC) * (p2-k2) * (p2-k3))
p3 = (CA+k1+k3)/2
S3 = sqrt(p3 * (p3-CA) * (p3-k1) * (p3-k3))

#  Найдем их высоты (Расстояние от точки до прямой = перпендикуляр)
h1 = 2 * round(S1, 5) / AB
h2 = 2 * round(S2, 5) / BC
h3 = 2 * round(S3, 5) / CA

# Расположения произвольной точки относительно каждой стороны.
# Если r = 0, значит точка принадлежит прямой
# Если r > 0, значит точка лежит правее прямой
# Если r < 0, значит точка лежит левее прямой
# Если r1, r2, r3 одного знака, значит произвольная точка внутри треугольника
r1 = (x1-x0)*(y2-y1)-(x2-x1)*(y1-y0)
r2 = (x2-x0)*(y3-y2)-(x3-x2)*(y2-y0)
r3 = (x3-x0)*(y1-y3)-(x1-x3)*(y3-y0)
if (r1>=0 and r2>=0 and r3>=0) or (r1<=0 and r2<=0 and r3<=0 ):
    print('Произвольная точка лежит внутри заданного треугольника.')
    if (h1 <= h2 and h1 < h3) or (h1 < h2 and h1 <= h3):
        print('Расстояние от заданной точки до ближайшей\
 стороны треугольника: ', h1)
    elif (h2 <= h1 and h2 < h3) or (h2 < h1 and h2 <= h3):
        print('Расстояние от заданной точки до ближайшей\
 стороны треугольника: ', h2)
    elif (h3 <= h1 and h3 < h2) or (h3 < h1 and h3 <= h2):
        print('Расстояние от заданной точки до ближайшей\
 стороны треугольника: ', h3)
else:
    print('\nТочка не лежит внутри треугольника')
